mod mod1;

print("Module main loaded");
use root::mod1::test_fn;

fn main() {
    print("Hello from main.yuzu");
    print(test_fn(3, 4));
    let obj = new root::mod1::TestClass();
    obj.test_method(100, 200);
    print(obj.x, obj.y, obj);
    print(c);
    
    print([1, 2, 3].length());
    for (v in [1,2,3,4]) {
        print(v);
    }

    let func = (-11).abs;
    //let papply = func.partial_apply(1, 2, 3);
    //papply(4, 5, 6);
    print("abs", (-10).abs(), func(), func.call());

    let listener = intrinsics::tcp_listen("127.0.0.1", 8080);
    print("Listening on 127.0.0.1:8080");
    let stream = intrinsics::tcp_accept(listener);
    print("Accepted connection");
    let reader = new std::BufferedReader(stream);
    while (true) {
        let line = reader.readline();
        if (line == null) {
            break;
        }
        print("Received line:", line);
    }
    print("Connection closed");
}


export let a = 5;
export let c = b + 10;
export let b = a + 10;

main();
std::std_test();