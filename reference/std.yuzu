class Iterator {
    fn map(map) MapIterator.new(this, map);
    fn collect() {
        let res = [];
        let cur = this.next();
        while (cur != null) {
            res.push(cur.value);
            cur = this.next();
        }
        res
    }
}

class IndexIterator : Iterator {
    constructor fn new(target) {
        this.target = target;
        this.current = -1;
    }
    fn next() {
        this.current += 1;
        if (this.current >= this.target.length()) null
        else {value: this.target[this.current]}
    }
}

class MapIterator : Iterator {
    constructor fn new(iterator, map_fn) {
        this.iterator = iterator;
        this.map_fn = map_fn;
    }
    fn next() {
        let next = this.iterator.next();
        if (next == null) return null;
        next.value = (this.map_fn)(next.value);
        next
    }
}

class Array {
    fn iter() IndexIterator.new(this);
}

class String {
    fn iter() IndexIterator.new(this);
}

return {
    Array,
    String,
    IndexIterator,
    MapIterator,
};
