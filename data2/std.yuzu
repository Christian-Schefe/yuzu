fn std_test() {
    print("Hello from std.yuzu");
}

class IndexIterator {
    let array = null;
    let index = 0;
    constructor(array) {
        this.array = array;
    }
    fn next() {
        if (this.index < this.array.length()) {
            let value = this.array[this.index];
            this.index += 1;
            {value: value}
        } else {
            null;
        }
    }
}

class ClassInstance {}
class Class {}
class Number {}
class Integer {}
class String {}

class Array {
    fn length() intrinsics::array_length(this);
    fn iter() new IndexIterator(this);
}

class Exception {
    let message = "";
    constructor(message) {
        this.message = message;
        print("Exception created:", message);
    }
}

//initialize lazy statics
Array;
Exception;
Number;
Integer;
String;
ClassInstance;
Class;